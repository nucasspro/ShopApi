// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopApi.Models;

namespace ShopApi.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Shop")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<int>("ParentId")
                        .HasColumnName("ParentId")
                        .HasColumnType("INT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ShopApi.Models.CcTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnName("Amount")
                        .HasColumnType("INT");

                    b.Property<string>("CcNum")
                        .HasColumnName("CcNum")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<string>("CcType")
                        .HasColumnName("CcType")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasColumnName("Code")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("OrderIdId");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnName("Processor")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<string>("ProcessorTransactionId")
                        .IsRequired()
                        .HasColumnName("ProcessorTransactionId")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<string>("Response")
                        .HasColumnName("Response")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("OrderIdId");

                    b.ToTable("CcTransactions");
                });

            modelBuilder.Entity("ShopApi.Models.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Active")
                        .HasColumnType("BIT")
                        .HasDefaultValue(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("Multiple")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Multiple")
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("ShopApi.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<int?>("OrderIdId");

                    b.Property<int>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("INT");

                    b.Property<int>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("INT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnName("Sku")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<int>("SubTotal")
                        .HasColumnName("SubTotal")
                        .HasColumnType("INT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("OrderIdId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("ShopApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DiscountPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DiscountPrice")
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<int?>("ProductStatusIdId");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Quantity")
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<int>("RegularPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegularPrice")
                        .HasColumnType("INT")
                        .HasDefaultValue(0);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnName("Sku")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<bool>("Texable")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tex")
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("ProductStatusIdId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShopApi.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ShopApi.Models.ProductStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("ProductStatuses");
                });

            modelBuilder.Entity("ShopApi.Models.ProductTag", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("TagId");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("ShopApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ShopApi.Models.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CouponIdId");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnName("OrderDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("SessionIdId");

                    b.Property<int>("Total")
                        .HasColumnName("Total")
                        .HasColumnType("INT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("UserIdId");

                    b.HasKey("Id");

                    b.HasIndex("CouponIdId");

                    b.HasIndex("SessionIdId");

                    b.HasIndex("UserIdId");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("ShopApi.Models.Session", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data")
                        .HasColumnName("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ShopApi.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ShopApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Active")
                        .HasColumnType("BIT")
                        .HasDefaultValue(true);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("VARCHAR")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("NVARCHAR")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShopApi.Models.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InsertedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ShopApi.Models.CcTransaction", b =>
                {
                    b.HasOne("ShopApi.Models.SalesOrder", "OrderId")
                        .WithMany("CcTransactions")
                        .HasForeignKey("OrderIdId");
                });

            modelBuilder.Entity("ShopApi.Models.OrderProduct", b =>
                {
                    b.HasOne("ShopApi.Models.SalesOrder", "OrderId")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderIdId");
                });

            modelBuilder.Entity("ShopApi.Models.Product", b =>
                {
                    b.HasOne("ShopApi.Models.ProductStatus", "ProductStatusId")
                        .WithMany("Products")
                        .HasForeignKey("ProductStatusIdId");
                });

            modelBuilder.Entity("ShopApi.Models.ProductCategory", b =>
                {
                    b.HasOne("ShopApi.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopApi.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopApi.Models.ProductTag", b =>
                {
                    b.HasOne("ShopApi.Models.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopApi.Models.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShopApi.Models.SalesOrder", b =>
                {
                    b.HasOne("ShopApi.Models.Coupon", "CouponId")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CouponIdId");

                    b.HasOne("ShopApi.Models.Session", "SessionId")
                        .WithMany("SalesOrders")
                        .HasForeignKey("SessionIdId");

                    b.HasOne("ShopApi.Models.User", "UserId")
                        .WithMany("SalesOrders")
                        .HasForeignKey("UserIdId");
                });

            modelBuilder.Entity("ShopApi.Models.UserRole", b =>
                {
                    b.HasOne("ShopApi.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopApi.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
